{"version":3,"sources":["SidebarOption.js","Sidebar.js","Firebase.js","Tweetbox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","txt","icon","className","Sidebar","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Tweetbox","useState","tweetmsg","setTweetmsg","tweetimg","setTweetimg","onChange","e","target","value","type","placeholder","onClick","preventDefault","collection","add","displayname","username","verified","text","image","Post","src","alt","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Math","floor","random","Widgets","articles","totalResults","newsItems","setNewsItems","newsarray","a","fetch","json","news","console","log","totalArticles","element","title","href","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3f0e91.chunk.js","sourcesContent":["import React from 'react'\r\nimport './sidebar.css'\r\nfunction SidebarOption({active,txt, icon }) {\r\n    return (\r\n        <div className={`sidebarOption ${active && \"active\"}`}>\r\n            <i className={icon}></i>\r\n            <h2>{txt}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React from 'react'\r\nimport './sidebar.css'\r\nimport SidebarOption from './SidebarOption'\r\nfunction Sidebar() {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <i className=\"fab fa-twitter t1\"></i>\r\n            <SidebarOption active icon=\"fas fa-home\" txt=\"Home\" />\r\n            <SidebarOption icon=\"fas fa-search\" txt=\"Explore\" />\r\n            <SidebarOption icon=\"far fa-bell\" txt=\"Notification\" />\r\n            <SidebarOption icon=\"fas fa-envelope\" txt=\"Message\" />\r\n            <SidebarOption icon=\"fas fa-list\" txt=\"List\" />\r\n            <SidebarOption icon=\"far fa-user\" txt=\"Profile\" />\r\n            <SidebarOption icon=\"fas fa-caret-down\" txt=\"More\" />\r\n            <button className=\"tweet\">Tweet</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import firebase from \"firebase\";\r\nimport 'firebase/firestore'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBonKzzPNa9VYzaB5NAz4_sbGnPq8w47YI\",\r\n    authDomain: \"twitter-clone-8b71e.firebaseapp.com\",\r\n    projectId: \"twitter-clone-8b71e\",\r\n    storageBucket: \"twitter-clone-8b71e.appspot.com\",\r\n    messagingSenderId: \"946626232885\",\r\n    appId: \"1:946626232885:web:bc5447f2b507cae4c6277c\",\r\n    measurementId: \"G-JEWS65M9SP\"\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nexport default db;","import React, { useState } from 'react'\r\nimport './feed.css'\r\nimport db from './Firebase';\r\nfunction Tweetbox() {\r\n    const [tweetmsg, setTweetmsg] = useState(\"\");\r\n    const [tweetimg, setTweetimg] = useState(\"\");\r\n    const sendTweet = e => {\r\n        e.preventDefault();\r\n        db.collection('posts').add(\r\n            {\r\n                displayname: \"Unknown\",\r\n                username: \"Unknown\",\r\n                verified: false,\r\n                text: tweetmsg,\r\n                image: tweetimg\r\n            }\r\n        )\r\n        setTweetmsg(\"\");\r\n        setTweetimg(\"\");\r\n    }\r\n    return (\r\n        <div className=\"tweetbox\">\r\n            <form >\r\n                <div className=\"inputTweet\">\r\n                    <i className=\"fas fa-user-tie avatar\"></i>\r\n                    <input\r\n                        onChange={e => setTweetmsg(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"What's happening ?\"\r\n                        value={tweetmsg}\r\n                    />\r\n                </div>\r\n                <input\r\n                    onChange={e => setTweetimg(e.target.value)}\r\n                    value={tweetimg}\r\n                    type=\"text\"\r\n                    placeholder=\"Optional: Enter image url\"\r\n                    className=\"inputImg\" />\r\n                <button\r\n                    type=\"submit\"\r\n                    onClick={sendTweet}\r\n                    className=\"tweetButton\">\r\n                    Tweet\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tweetbox\r\n","import React from 'react'\r\nimport './post.css'\r\nfunction Post({\r\n    displayname,\r\n    username,\r\n    verified,\r\n    text,\r\n    image\r\n}) {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"postdp\">\r\n                <i className=\"fas fa-user-tie avatar\"></i>\r\n            </div>\r\n            <div className=\"postbody\">\r\n                <div className=\"postheader\">\r\n                    <div className=\"headertxt\">\r\n                        <h3>\r\n                            {displayname}{''}\r\n                            {\r\n                                verified &&\r\n                                <i className=\"fas fa-check-circle\"></i>\r\n                            }\r\n                            <span>{username}</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"postcontent\">\r\n                    <p>{text}</p>\r\n                    <div className=\"img\">\r\n                        <img src={image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"postfooter\">\r\n                    <i className=\"far fa-comment\"></i>\r\n                    <i className=\"fas fa-retweet\"></i>\r\n                    <i className=\"far fa-heart\"></i>\r\n                    <i className=\"fas fa-share\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useEffect, useState } from 'react'\r\nimport './feed.css'\r\nimport Tweetbox from './Tweetbox'\r\nimport Post from './Post'\r\nimport db from './Firebase'\r\nfunction Feed() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    useEffect(() => {\r\n        db.collection('posts').onSnapshot(snapshot => {\r\n            setPosts(snapshot.docs.map(doc => doc.data()))\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n            <Tweetbox />\r\n            {posts.map(post => (\r\n                <Post\r\n                    key={Math.floor(Math.random() * 10000)}\r\n                    displayname={post.displayname}\r\n                    username={post.username}\r\n                    verified={post.verified}\r\n                    text={post.text}\r\n                    image={post.image}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, { useEffect, useState } from 'react'\r\nimport './widget.css'\r\nfunction Widgets() {\r\n    const [newsItems, setNewsItems] = useState({\r\n        articles:[],\r\n        totalResults:0\r\n    });\r\n    let url = \"https://gnews.io/api/v4/top-headlines?&token=5fbd6d6f6babbcc8b4dc71d2ceb0f407&lang=en&country=in\";\r\n\r\n    const newsarray = async () => {\r\n        let data = await fetch(url);\r\n        let news = await data.json();\r\n        console.log(news);\r\n        setNewsItems({\r\n            articles:news.articles,\r\n            totalResults:news.totalArticles\r\n        })\r\n         console.log(newsItems);\r\n      \r\n    }\r\n    useEffect(() => {\r\n        newsarray()\r\n       \r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"wheader\">\r\n                <h2><i className=\"fas fa-hashtag\"></i> What's happening\r\n                    right now</h2>\r\n            </div>\r\n            {\r\n                 newsItems.articles.map(element => {\r\n                     return (\r\n                         <div className=\"wbody\" key={Math.floor(Math.random() * 10000)}>\r\n                             <div className=\"news-image\">\r\n                                 <img src={element.image} alt=\"\" />\r\n                             </div>\r\n                             <div className=\"text\">\r\n                                 <h2>\r\n                                     {element.title}\r\n                                 </h2>\r\n                                 <a href={element.url} target=\"blank\" >\r\n                                     <button className=\"more\">More</button>\r\n                                 </a>\r\n                             </div>\r\n                         </div>\r\n                     )\r\n                 })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import './App.css';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Widgets from './Widgets';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Feed />\n      <Widgets />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}